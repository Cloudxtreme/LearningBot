package fr.insarennes.learningbot.controller;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import kc.micro.Thorn;
import robocode.BattleEndedEvent;
import robocode.BulletHitEvent;
import robocode.ScannedRobotEvent;
import fr.insarennes.learningbot.model.DecisionTree;
import fr.insarennes.learningbot.model.LearnedData;

/**
 * A robot based on an existing one, however this one will improve itself over time,
 * by building and following a decision tree.
 * Currently working only on Linux FIXME
 */
public class LearningBot extends Thorn {
//CONSTANTS
	/** The file which contains the decision tree **/
	private static final String PATH_TREE = "/tmp/tree.xml";
	
//ATTRIBUTES
	/** The decision tree generated by BonzaiBoost (c) **/
	private static DecisionTree tree;
	/** All the data acquired during battle (static so that each LearningBot instance has access to it) **/ 
	private static List<LearnedData> knowledge = new ArrayList<LearnedData>();

//CONSTRUCTOR
	/**
	 * Class constructor
	 */
	public LearningBot() {
		super();
		
		//Load tree if needed
		if(tree == null) {
			DecisionTreeParser dtp = new DecisionTreeParser();
			tree = dtp.parse(new File(PATH_TREE));
		}
	}

//ACCESSORS
	
//MODIFIERS
	
//OTHER METHODS
	/**
	 * This method is launched when a battle starts
	 */
	public void run() {
		if(tree == null) {
			super.run();
		}
		else {
			//TODO
		}
	}
	
	/**
	 * This method is called when a robot is detected
	 */
	public void onScannedRobot(ScannedRobotEvent e) {
		knowledge.add(new LearnedData(this, e));
		if(tree == null) {
			super.onScannedRobot(e);
		}
		else {
			//TODO
			//Decision for shoot
			//Decision for movement
		}
	}
	
	public void onBulletHit(BulletHitEvent e) {
		super.onBulletHit(e);
		knowledge.get(knowledge.size()-1).setShootSuccesfull();
	}
	
	public void onBattleEnded(BattleEndedEvent e) {
		//Save data in filesystem
		LearnedDataWriter ldw = new LearnedDataWriter();
		try {
			ldw.write(knowledge, getDataFile("learningbot.data"), getDataFile("learningbot.names"));
		} catch (IOException e1) {
			e1.printStackTrace();
			System.err.println("Failed to save collected data.");
		}
		
		super.onBattleEnded(e);
	}
}
